<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-03-20 at 07:41:07.
 *
 * @group checkout
 */
class APP_Dynamic_Checkout_Test extends PHPUnit_Framework_TestCase {

	/**
	 * Current test number. Needs for unique names.
	 *
	 * @var int
	 */
	protected static $test_num = 0;

	/**
	 * @var APP_Dynamic_Checkout
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		self::$test_num++;
		$this->object = new APP_Dynamic_Checkout( 'co' . self::$test_num );
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {

	}

	/**
	 * @covers APP_Dynamic_Checkout::add_step
	 * @todo   Implement test_add_step().
	 */
	public function test_add_step() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::add_step_before
	 * @todo   Implement test_add_step_before().
	 */
	public function test_add_step_before() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::add_step_after
	 * @todo   Implement test_add_step_after().
	 */
	public function test_add_step_after() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::unregister_step
	 * @todo   Implement test_unregister_step().
	 */
	public function test_unregister_step() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::display_step
	 * @todo   Implement test_display_step().
	 */
	public function test_display_step() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::process_step
	 * @todo   Implement test_process_step().
	 */
	public function test_process_step() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::set_redirect_flag
	 * @todo   Implement test_set_redirect_flag().
	 */
	public function test_set_redirect_flag() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::set_expiration
	 * @todo   Implement test_set_expiration().
	 */
	public function test_set_expiration() {
		global $wpdb;

		$transient_key = $this->object->get_checkout_type() . '_' . $this->object->get_hash();
		$opt_key       = '_transient_' . $transient_key;
		$timeout_key   = '_transient_timeout_' . $transient_key;

		// 1. Default Expiration should be set on checkout construction.
		$timeout = get_option( $timeout_key );
		$this->assertEquals( time() + DAY_IN_SECONDS, $timeout, '', 5 );

		$row = $wpdb->get_row( $wpdb->prepare( "SELECT autoload FROM $wpdb->options WHERE option_name = %s", $opt_key ) );
		$this->assertEquals( 'no', $row->autoload );

		// 2. Change expiration.
		$this->object->set_expiration( DAY_IN_SECONDS * 2 );

		$timeout = get_option( $timeout_key );
		$this->assertEquals( time() + DAY_IN_SECONDS * 2, $timeout, '', 5 );

		$row = $wpdb->get_row( $wpdb->prepare( "SELECT autoload FROM $wpdb->options WHERE option_name = %s", $opt_key ) );
		$this->assertEquals( 'no', $row->autoload );

		// 3. Make unexpirable, check autoload.
		$this->object->set_expiration( 0 );

		$timeout = get_option( $timeout_key, false );
		$this->assertEquals( false, $timeout );

		$row = $wpdb->get_row( $wpdb->prepare( "SELECT autoload FROM $wpdb->options WHERE option_name = %s", $opt_key ) );
		$this->assertEquals( 'no', $row->autoload );

		// 4. Make expirable again.
		$this->object->set_expiration( DAY_IN_SECONDS );

		$timeout = get_option( $timeout_key );
		$this->assertEquals( time() + DAY_IN_SECONDS, $timeout, '', 5 );

		$row = $wpdb->get_row( $wpdb->prepare( "SELECT autoload FROM $wpdb->options WHERE option_name = %s", $opt_key ) );
		$this->assertEquals( 'no', $row->autoload );
	}

	public function test_complete_checkout() {
		// Try to trigger completion more than one time.
		$this->object->complete_checkout();
		$this->object->complete_checkout();

		$this->assertEquals( 1, did_action(  "appthemes_checkout_{$this->object->get_checkout_type()}_completed" ) );
	}

	/**
	 * @covers APP_Dynamic_Checkout::get_current_step
	 * @todo   Implement test_get_current_step().
	 */
	public function test_get_current_step() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::get_next_step
	 * @todo   Implement test_get_next_step().
	 */
	public function test_get_next_step() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::get_previous_step
	 * @todo   Implement test_get_previous_step().
	 */
	public function test_get_previous_step() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::finish_step
	 * @todo   Implement test_finish_step().
	 */
	public function test_finish_step() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::cancel_step
	 * @todo   Implement test_cancel_step().
	 */
	public function test_cancel_step() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::add_data
	 * @todo   Implement test_add_data().
	 */
	public function test_add_data() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::get_data
	 * @todo   Implement test_get_data().
	 */
	public function test_get_data() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::verify_hash
	 * @todo   Implement test_verify_hash().
	 */
	public function test_verify_hash() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::redirect
	 * @todo   Implement test_redirect().
	 */
	public function test_redirect() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::get_hash
	 * @todo   Implement test_get_hash().
	 */
	public function test_get_hash() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::get_checkout_type
	 * @todo   Implement test_get_checkout_type().
	 */
	public function test_get_checkout_type() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::get_steps
	 * @todo   Implement test_get_steps().
	 */
	public function test_get_steps() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers APP_Dynamic_Checkout::get_steps_count
	 * @todo   Implement test_get_steps_count().
	 */
	public function test_get_steps_count() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

}
